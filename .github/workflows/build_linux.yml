name: Build Nunchaku Wheels (Linux)

on:
  workflow_dispatch:

jobs:
  build_linux:
    name: Build Linux Wheels (CUDA ${{ matrix.cuda_version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        cuda_version: ["12.6.3"]
        torch_version: ["2.6.0"]
        torchvision_version: ["0.21.0"]
        torchaudio_version: ["2.6.0"]
        cuda_suffix: ["cu126"] 

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: false
        swap-storage: true
        
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install CUDA Toolkit ${{ matrix.cuda_version }}
      uses: Jimver/cuda-toolkit@master
      id: cuda-toolkit
      with:
        cuda: ${{ matrix.cuda_version }}

    - name: Install build tools and dependencies (GCC >= 11)
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-11 gcc-11 # Install required compiler version
        echo "CC=/usr/bin/gcc-11" >> $GITHUB_ENV
        echo "CXX=/usr/bin/g++-11" >> $GITHUB_ENV
        python -m pip install --upgrade pip
        pip install ninja wheel build # Core build tools

    - name: Install PyTorch ${{ matrix.torch_version }} (CUDA ${{ matrix.cuda_version }})
      run: |
        pip install torch==${{ matrix.torch_version }} torchvision==${{ matrix.torchvision_version }} torchaudio==${{ matrix.torchaudio_version }} --index-url https://download.pytorch.org/whl/${{ matrix.cuda_suffix }}

    - name: Install Nunchaku dependencies
      run: |
        pip install diffusers transformers accelerate sentencepiece protobuf huggingface_hub

    - name: Build Nunchaku wheels
      run: |
        # Use the recommended command for building distributable wheels
        # NUNCHAKU_INSTALL_MODE=ALL ensures compatibility across supported GPU architectures
        # NUNCHAKU_BUILD_WHEELS=1 triggers the wheel building logic in setup.py (assumption based on name)
        echo "Building wheels with NUNCHAKU_INSTALL_MODE=ALL..."
        NUNCHAKU_INSTALL_MODE=ALL NUNCHAKU_BUILD_WHEELS=1 python -m build --wheel --no-isolation
      env:
        CUDA_HOME: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}
        MAX_JOBS: 2

    - name: List built wheels
      run: ls -l dist/

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nunchaku-wheels-linux-py${{ matrix.python-version }}-cuda${{ matrix.cuda_version }}
        path: dist/*.whl
